#!/usr/bin/env python

import os, os.path, sys, getpass, shlex, subprocess

home=os.getenv('HOME')

def runprog(argv):
    stdin = sys.stdin
    stdout = sys.stdout
    if '>' in argv:
	index = argv.index('>')
	fd = open(argv[index+1], "w")
	stdout = fd
	subprocess.call(argv[:-2],stdin = stdin,stdout = stdout)
    elif '<' in argv:
	index = argv.index('<')
	fd = open(argv[index+1], "r")
	stdin = fd
	subprocess.call(argv[:-2],stdin = stdin,stdout = stdout)
    elif '|' in argv:
	p1 = subprocess.Popen(argv[:argv.index('|')],stdin=stdin, stdout=subprocess.PIPE)
	p2 = subprocess.call(argv[argv.index('|')+1:], stdin=p1.stdout, stdout=stdout)
    else:
	subprocess.call(argv,stdin = stdin,stdout = stdout)
    if stdin!=sys.stdin or stdout!=sys.stdout:
	fd.close()

def getcwd():
    "like os.getcwd(), but collapses the home directory prefix into ~"
    cwd = os.getcwd()
    if cwd.startswith(home):
        cwd = '~'+cwd[len(home):]
    return cwd


while True:
    print "%s@%s>" % (getpass.getuser(), getcwd()),

    argv = None
    try:
        argv = shlex.split(raw_input())
    except EOFError:
        print
        break                             # end of file from user, e.g. Ctrl-D

    if not argv:
        continue # empty command

    for arg in argv:
	if arg.startswith('$'):
	    index = argv.index(arg)
	    argv[index] = os.path.expandvars(arg)
	    
    if argv[0] in ['exit', 'quit', 'bye']:
        break        
    elif argv[0]=='cd':
        try:
            os.chdir(os.path.expanduser(argv[1])) # expand ~ to home directory
        except IndexError:                   # no arguments, chdir to home dir
            os.chdir(home)
        except OSError, s:
            print >>sys.stderr, "chdir: %s" % s
    elif '=' in argv:
	  os.environ[argv[0]] = argv[2]
    
    #elif '$' in argv:
	#  os.path.expandvars(argv[1])
    else: 
	runprog(argv)
	

# goodbye message
goodbye = "have a good sunny day, see you back soon"
print "*"+"-"*(len(goodbye)+2)+"*"
print "| %s |" % goodbye
print "*"+"-"*(len(goodbye)+2)+"*"
